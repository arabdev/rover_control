# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import rover_pb2 as rover__pb2


class ExchangeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendControl = channel.unary_unary(
        '/rover.Exchange/SendControl',
        request_serializer=rover__pb2.Control.SerializeToString,
        response_deserializer=rover__pb2.Status.FromString,
        )


class ExchangeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendControl(self, request, context):
    """One request followed by one response.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExchangeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendControl': grpc.unary_unary_rpc_method_handler(
          servicer.SendControl,
          request_deserializer=rover__pb2.Control.FromString,
          response_serializer=rover__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rover.Exchange', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
